// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct S_EnterRoom : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static S_EnterRoom GetRootAsS_EnterRoom(ByteBuffer _bb) { return GetRootAsS_EnterRoom(_bb, new S_EnterRoom()); }
  public static S_EnterRoom GetRootAsS_EnterRoom(ByteBuffer _bb, S_EnterRoom obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S_EnterRoom __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public EnterRoomError Ok { get { int o = __p.__offset(4); return o != 0 ? (EnterRoomError)__p.bb.GetUshort(o + __p.bb_pos) : EnterRoomError.SUCCESS; } }

  public static Offset<S_EnterRoom> CreateS_EnterRoom(FlatBufferBuilder builder,
      EnterRoomError ok = EnterRoomError.SUCCESS) {
    builder.StartTable(1);
    S_EnterRoom.AddOk(builder, ok);
    return S_EnterRoom.EndS_EnterRoom(builder);
  }

  public static void StartS_EnterRoom(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddOk(FlatBufferBuilder builder, EnterRoomError ok) { builder.AddUshort(0, (ushort)ok, 0); }
  public static Offset<S_EnterRoom> EndS_EnterRoom(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<S_EnterRoom>(o);
  }
}


static public class S_EnterRoomVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Ok*/, 2 /*EnterRoomError*/, 2, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
